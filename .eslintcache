[{"G:\\new_work_test\\input_test\\src\\reportWebVitals.js":"1","G:\\new_work_test\\input_test\\src\\App.js":"2","G:\\new_work_test\\input_test\\src\\utils\\getInputs.js":"3","G:\\new_work_test\\input_test\\src\\components\\modals\\NameChangeModal.js":"4","G:\\new_work_test\\input_test\\src\\utils\\useOnClick.js":"5","G:\\new_work_test\\input_test\\src\\components\\ui\\Button.js":"6","G:\\new_work_test\\input_test\\src\\components\\header\\Header.js":"7"},{"size":362,"mtime":1609959044328,"results":"8","hashOfConfig":"9"},{"size":2782,"mtime":1610129419912,"results":"10","hashOfConfig":"9"},{"size":305,"mtime":1610115809965,"results":"11","hashOfConfig":"9"},{"size":1183,"mtime":1610127124530,"results":"12","hashOfConfig":"9"},{"size":481,"mtime":1610123863310,"results":"13","hashOfConfig":"9"},{"size":373,"mtime":1610125230847,"results":"14","hashOfConfig":"9"},{"size":394,"mtime":1610128460730,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nagqg8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\new_work_test\\input_test\\src\\reportWebVitals.js",[],"G:\\new_work_test\\input_test\\src\\App.js",["31"],"import './styles/global.css';\nimport {useEffect, useState} from \"react\";\nimport getInputs from \"./utils/getInputs\";\nimport NameChangeModal from \"./components/modals/NameChangeModal\";\nimport Header from \"./components/header/Header\";\n\nfunction App() {\n  const [inputs, setInputs] = useState([]);\n  const [showModal, setModal] = useState(false);\n  const [activeInput, setActiveInput] = useState({})\n\n  const valueChange = (e) => {\n      let tempArray = [...inputs];\n      tempArray[e.target.id - 1] = {...tempArray[e.target.id - 1], value: e.target.value};\n      setInputs(tempArray);\n  }\n\n  const clear = (id) => {\n      let tempArray = [...inputs];\n      tempArray[id - 1] = {...tempArray[id - 1], value: ''};\n      setInputs(tempArray);\n  }\n\n  const clearAll = () => {\n      let tempArray = [...inputs];\n      tempArray.map(item => item.value = '');\n      setInputs(tempArray);\n  }\n\n  async function sendData () {\n      const data = {};\n      let checked = false;\n      inputs.map((item, index) => {\n          if (item.value) {\n              data['value' + index] = item.value;\n              checked = true;\n          }\n      })\n\n     if (checked) {\n         fetch('localhost:3000/rest', {\n             method: 'POST',\n             body: JSON.stringify(data),\n             headers: {\n                 'Content-Type': 'application/json'\n             }\n         }).then(r => {\n             console.log(r);\n         }).catch(e => {\n             alert(e);\n         });\n     } else {\n         alert('No data to send')\n     }\n  }\n\n  const toggleModal = (show, input) => {\n       if (show) {\n           setActiveInput({...input});\n           setModal(show)\n       } else {\n           setActiveInput({});\n           setModal(show);\n       }\n  }\n\n  const saveChanges = (input) => {\n      let tempArray = [...inputs];\n      tempArray[input.id - 1] = input;\n      setInputs(tempArray);\n      toggleModal(false);\n  }\n\n  useEffect(() => {\n      setInputs(getInputs(30));\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header clearAll={clearAll} sendData={sendData}/>\n      <div className=\"row\">\n        {\n          inputs && inputs.map(input => (\n              <div className=\"wrapper\">\n                  <label className=\"label\" id={ \"label\" + input.id } onClick={() => toggleModal(true, input)} htmlFor={ input.id }>{ input.name }</label>\n                  <input type=\"text\" className=\"input\" id={ input.id } onChange={valueChange} value={ input.value }/>\n                  { input.value && <span onClick={() => clear( input.id )}>&times;</span>}\n              </div>\n          ))\n        }\n      </div>\n      {activeInput && <NameChangeModal showModal={showModal} toggleModal={toggleModal} activeInput={activeInput} saveChanges={saveChanges}/>}\n    </div>\n  );\n}\n\nexport default App;\n","G:\\new_work_test\\input_test\\src\\utils\\getInputs.js",[],"G:\\new_work_test\\input_test\\src\\components\\modals\\NameChangeModal.js",[],"G:\\new_work_test\\input_test\\src\\utils\\useOnClick.js",["32"],"G:\\new_work_test\\input_test\\src\\components\\ui\\Button.js",[],"G:\\new_work_test\\input_test\\src\\components\\header\\Header.js",[],{"ruleId":"33","severity":1,"message":"34","line":33,"column":32,"nodeType":"35","messageId":"36","endLine":33,"endColumn":34},{"ruleId":"37","severity":1,"message":"38","line":18,"column":8,"nodeType":"39","endLine":18,"endColumn":10,"suggestions":"40"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handler' and 'ref'. Either include them or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [handler, ref]",{"range":"44","text":"45"},[474,476],"[handler, ref]"]